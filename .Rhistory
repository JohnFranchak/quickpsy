library(MPDiR)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5)
plot(fit)
fit
library(quickpsy)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, grouping = c("WaveForm"), B = 5, paircomparisons = TRUE)
library(tidyverse)
library(MPDiR)
library(quickpsy)
fit <- quickpsy(Vernier, Phaseshift, NumUpward, N, B = 5)
plot(fit)
fit
?qpdat
?write.csv
load("/Users/daniellinares/Dropbox/quickpsy/quickpsy 2 august 2019/data/qpdat.rda")
qpdat
write.csv(qpdat, "xx.csv")
getwd()
read.csv("qpdat.csv")
qpdat
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond", "interval", "ecc") B = 5)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond", "interval", "ecc"), B = 5)
plot(fit)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond", "interval"), B = 5)
plot(fit)
dat
qpdat
qpdat %>% distinct(participant)
library(quickpsy)
library(tidyverse)
library(cowplot)
library(quickpsy)
webaddress <- "https://raw.githubusercontent.com/danilinares/quickpsy/master/inst/extdata/example1/"
dat1 <- read_table2(paste0(webaddress,"aa1.txt"))
dat2 <- read_table2(paste0(webaddress,"bb1.txt"))
dat3 <- read_table2(paste0(webaddress,"cc2.txt"))
dat1 <- dat1 %>% mutate(participant = "aa")
dat2 <- dat2 %>% mutate(participant = "bb")
dat3 <- dat3 %>% mutate(participant = "cc")
dat <- bind_rows(dat1, dat2, dat3)
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
dat
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
source('~/Dropbox/quickpsy/8agost2020/quickpsy/R/quickreadfiles.R', echo=TRUE)
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
library(tidyverse)
library(cowplot)
library(quickpsy)
webaddress <- "https://raw.githubusercontent.com/danilinares/quickpsy/master/inst/extdata/example1/"
dat1 <- read_table2(paste0(webaddress,"aa1.txt"))
dat2 <- read_table2(paste0(webaddress,"bb1.txt"))
dat3 <- read_table2(paste0(webaddress,"cc2.txt"))
dat1 <- dat1 %>% mutate(participant = "aa")
dat2 <- dat2 %>% mutate(participant = "bb")
dat3 <- dat3 %>% mutate(participant = "cc")
dat <- bind_rows(dat1, dat2, dat3)
dat
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
getwd()
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
dat
library(tidyverse)
library(cowplot)
library(quickpsy)
webaddress <- "https://raw.githubusercontent.com/danilinares/quickpsy/master/inst/extdata/example1/"
dat1 <- read_table2(paste0(webaddress,"aa1.txt"))
dat2 <- read_table2(paste0(webaddress,"bb1.txt"))
dat3 <- read_table2(paste0(webaddress,"cc2.txt"))
dat1 <- dat1 %>% mutate(participant = "aa")
dat2 <- dat2 %>% mutate(participant = "bb")
dat3 <- dat3 %>% mutate(participant = "cc")
dat <- bind_rows(dat1, dat2, dat3)
dat <- quickreadfiles(participant = c('aa', 'bb', 'cc'), session = c('1', '2'))
dat
fit <- quickpsy(dat, phase, resp, grouping=c("ecc", "participant"), bootstrap = "none")
# we can also introduce the name of the arguments:
# fit <- quickpsy(d = dat, x = phase, k = resp, grouping=.(ecc, participant))
names(fit)
parameters <- fit$par
parameters
plot1 <- plot(fit)
plot1
plot1 + theme_classic() + ylab('Proportion') + theme(panel.border = element_blank())
ggplot() +
facet_wrap(~participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(ecc),
group=paste(sample,ecc)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = factor(ecc)),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = factor(ecc)), size = 4)
ggplot() +
facet_wrap(~participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(ecc),
group=paste(sample,ecc)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = factor(ecc)),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = factor(ecc)), size = 4)
fit$curvesbootstrap
fit
fit$curves
qpdat
read.csv("qpdatold.csv")
qpdatold
read.csv("qpdatold.csv")
qpdatold <- read.csv("qpdatold.csv")
qpdatold
head(qpdatold)
qpdat <- qpdatold %>%
filter(ecc == 1, interval == 800, cond == 1)
qpdat
qpdat <- qpdatold %>%
filter(ecc == 1, interval == 800, cond == 1) %>%
select(-ecc, -interval, -cond)
qpdat
head(qpdat)
qpdat <- qpdatold %>%
filter(interval == 800, cond == 1) %>%
select(-interval, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit)
qpdat <- qpdatold %>%
filter(interval == 800, ecc == 1) %>%
select(-interval, -ecc)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond"), B = 5)
plot(fit)
qpdat <- qpdatold %>%
filter(interval == 1600, ecc == 1) %>%
select(-interval, -ecc)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond"), B = 5)
plot(fit)
qpdat <- qpdatold %>%
filter(interval == 1600, ecc == 2) %>%
select(-interval, -ecc)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond"), B = 5)
plot(fit)
qpdat <- qpdatold %>%
filter(interval == 1600, ecc == 3) %>%
select(-interval, -ecc)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond"), B = 5)
plot(fit)
plot(fit, color = cond)
qpdat <- qpdatold %>%
filter(interval == 400, ecc == 3) %>%
select(-interval, -ecc)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "cond"), B = 5)
plot(fit, color = cond)
qpdat <- qpdatold %>%
filter(ecc == 3, cond == 1) %>%
select(-ecc, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "interval"), B = 5)
plot(fit, color = cond)
plot(fit)
plot(fit, color = interval)
qpdat <- qpdatold %>%
filter(interval == 800, cond == 1) %>%
select(-interval, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit, color = interval)
qpdat <- qpdatold %>%
filter(interval == 800, cond == 1) %>%
select(-interval, -cond)
qpdat
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit, color = ecc)
qpdat <- qpdatold %>%
filter(interval == 400, cond == 1) %>%
select(-interval, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit, color = ecc)
qpdat <- qpdatold %>%
filter(interval == 200, cond == 1) %>%
select(-interval, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit, color = ecc)
qpdat <- qpdatold %>%
filter(interval == 1600, cond == 1) %>%
select(-interval, -cond)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant",  "ecc"), B = 5)
plot(fit, color = ecc)
qpdatold <- read.table("all2.txt", header = TRUE)
getwed(
)
getwd()
qpdatold <- read.table("all.txt", header = TRUE)
qpdatold
qpdatold %>% head(
)
fit <- quickpsy(qpdatold, FASE, RESP, grouping = c("CAMBIO",  "INT"), B = 5)
plot(fit)
qpdatold <- read.table("DL.TXT", header = TRUE)
qpdatold %>% head()
qpdatold <- read.table("DL.TXT", header = TRUE)
fit <- quickpsy(qpdatold, FASE, RESP, grouping = c("CAMBIO",  "INT"), B = 5)
plot(fit)
dl <- read.table("DL.TXT", header = TRUE)
dl <- read.table("fm.TXT", header = TRUE)
fit <- quickpsy(qpdatold, FASE, RESP, grouping = c("CAMBIO",  "INT"), B = 5)
plot(fit)
dl <- read.table("dl.TXT", header = TRUE) %>%
mutate(participant == "Participant1")
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant == "Participant2")
qpdat <- dl %>%
bind_rows(fm)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO",  "INT"), B = 5)
dl <- read.table("dl.TXT", header = TRUE) %>%
mutate(participant == "Participant1")
dl <- read.table("dl.TXT", header = TRUE) %>%
mutate(participant = "Participant1")
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
qpdat <- dl %>%
bind_rows(fm)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO",  "INT"), B = 5)
plot(fit)
dl <- read.table("dl.TXT", header = TRUE) %>%
mutate(participant = "Participant1")
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
qpdat <- dl %>%
bind_rows(fm)
qpdat
read.table("dl.TXT", header = TRUE)
dl
fm
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
head(gm)
head(fm)
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
fm
head(fm)
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
qpdat <- dl %>%
bind_rows(fm)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO",  "INT"), B = 5)
plot(fit)
plot(fit, color = CAMBIO)
jm <- read.table("jm.TXT", header = TRUE) %>%
mutate(participant = "Participant3")
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO",  "INT"), B = 5)
dl <- read.table("dl.TXT", header = TRUE) %>%
mutate(participant = "Participant1")
fm <- read.table("fm.TXT", header = TRUE) %>%
mutate(participant = "Participant2")
jm <- read.table("jm.TXT", header = TRUE) %>%
mutate(participant = "Participant3")
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO",  "INT"), B = 5)
plot(fit, color = CAMBIO)
fit <- quickpsy(qpdat, FASE, RESP,
grouping = c("participant", "CAMBIO"), B = 5)
plot(fit, color = CAMBIO)
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
dplyr(-INT, -TR)
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR)
head(qpdat)
qpdat
head(qpdat)
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = PHASE, cond = CAMBIO)
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO)
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO) %>%
as_tibble()
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble()
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, everything())
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, everything()) %>%
mutate(trial = trial + 1)
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, cond, trial, phase, resp) %>%
mutate(trial = trial + 1)
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, cond, trial, phase, resp) %>%
mutate(trial = trial + 1) %>%
mutate(cond = if_else(cond == 0, "condition1", "condition2"))
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, cond, trial, phase, resp) %>%
mutate(trial = trial + 1) %>%
mutate(cond = if_else(cond == 0, "condition1", "condition2"))
qpdat
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, cond, trial, phase, resp) %>%
mutate(trial = trial + 1) %>%
mutate(cond = if_else(cond == 0, "condition1", "condition2"))
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), B = 5)
plot(fit, color = cond)
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), B = 30)
plot(fit, color = cond)
qpdat <- dl %>%
bind_rows(fm) %>%
bind_rows(jm) %>%
select(-INT, -TR) %>%
rename(trial = TRIAL, phase = FASE, cond = CAMBIO, resp = RESP) %>%
as_tibble() %>%
select(participant, cond, trial, phase, resp) %>%
mutate(trial = trial + 1) %>%
mutate(cond = if_else(cond == 0, "cond1", "cond2"))
fit <- quickpsy(qpdat, phase, resp,
grouping = c("participant", "cond"), B = 30)
plot(fit, color = cond)
plot(fit)
write_csv(qpdat, "qpdat.csv")
plot(fit, color = cond)
devtools::use_data(qpdat)
qpdat
use_data(qpdat)
library(devtools)
use_data(qpdat)
library(quickpsy)
qpdat
?qpdat
??qpdat
document()
?qpdat
document
document(
)
?qpdat
document()
library(quickpsy)
rm(list = c("quickreadfiles"))
document(
)
?qpdat
citation("quickpsy")
citHeader("To cite quickpsy in publications use:")
source('~/.active-rstudio-document', echo=TRUE)
citEntry(entry = "Article",
title        = "{quickpsy}: An R package to fit psychometric functions for multiple groups",
author       = personList(as.person("Daniel Linares"),
as.person("Joan López-Moliner")),
journal      = "The R Journal",
year         = "2016",
volume       = "8",
number       = "1",
pages        = "122--131",
url          = "https://doi.org/10.32614/RJ-2016-008",
textVersion  =
paste("Daniel Linares, Joan López-Moliner (2016).",
"quickpsy: An R package to fit psychometric functions for multiple groups",
"The R Journal,  8(1), 122-131.",
"URL hhttps://doi.org/10.32614/RJ-2016-008")
)
document()
citation(quickpsy)
library(quickpsy)
citation("quickpsy")
browseVignettes("dplyr")
browseVignettes("quickpsy")
use_vignette("basics")
qpdat
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 100)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 50)
names(fit)
parameters <- fit$par
parameters
thresholds <- fit$thresholds
thresholds
plot(fit)
plot(fit)
plot(fit, color = cond)
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_light()
plot(fit, color = cond) +
labs(x = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
library(quickpsy)
document()
document()
library(quickpsy)
document()
library(devtools)
document()
library(quickpsy)
??pluck
document(
)
library(quickpsy)
document()
library(quickpsy)
library(quickpsy)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(quickpsy)
fit <- quickpsy(qpdat, phase, resp, grouping = c("participant", "cond"), B = 5)
names(fit)
thresholds <- fit$thresholds
thresholds
plot(fit)
plot(fit, color = cond)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
fit
plot(fit, color = cond) +
labs(y = "Proportion")
class(plot(fit))
plot(fit, color = cond) +
# labs(y = "Proportion") +
theme_minimal()
plot(fit)
ggplot() +
facet_wrap(~ participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(cond),group=paste(sample, cond)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = cond),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = cond), size = 4)
library(ggplot2)
plot(fit, color = cond) +
labs(y = "Proportion") +
theme_minimal()
ggplot() +
facet_wrap(~ participant) +
geom_line(data = fit$curvesbootstrap, aes(x = x, y = y, color = factor(cond),group=paste(sample, cond)), lwd = .2, alpha = .4) +
geom_line(data = fit$curves, aes(x = x, y = y, group = cond),
color = "black") +
geom_point(data = fit$averages, aes(x = phase, y = prob, color = cond), size = 4)
